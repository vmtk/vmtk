environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\condabuild\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON: "C:\\Python27_64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      CONDA_PY: "27"
      APP_CONDA_PY: "2.7.14"

    - PYTHON: "C:\\Python35_64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      CONDA_PY: "35"
      APP_CONDA_PY: "3.5.1"

    - PYTHON: "C:\\Python36_64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      CONDA_PY: "36"
      APP_CONDA_PY: "3.6.1"

install:
  # this installs the appropriate Miniconda (Py2/Py3, 32/64 bit),
  # as well as pip, conda-build, and the binstar CLI
  - powershell .\\condabuild\\appveyor\\install.ps1
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

build: false

test_script:
  # Build and test the package. This appears(?) to sporadically fail due to a 
  # bug in conda-build on 32 bit python.
  # https://github.com/conda/conda-build/issues/152
  #
  # Note also that our setup.py script, which is called by conda-build, writes
  # a __conda_version__.txt file, so the version number on the binary package
  # is set dynamically. This unfortunately mean that conda build --output
  # doesn't really work.
  #
  - "%CMD_IN_ENV% conda config --add channels vmtk/label/dev"
  - "%CMD_IN_ENV% conda config --show"
  - "%CMD_IN_ENV% conda build --python %APP_CONDA_PY% --no-copy-test-source-files condabuild"